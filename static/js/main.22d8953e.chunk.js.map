{"version":3,"sources":["components/Form/ContactForm.styled.js","components/Form/ContactForm.jsx","components/List/ContactList.styled.js","components/List/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameId","uuidv4","telId","handleChange","e","target","value","preventDefault","htmlFor","type","pattern","title","required","id","onChange","List","ul","Name","p","Item","li","ContactList","contacts","onDeleteContacts","map","onClick","Filter","onBlur","Title","h2","App","setContacts","filter","setFilter","localstorageKeyName","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","find","contact","toLowerCase","toLocaleLowerCase","alert","newContact","prevState","currentTarget","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d8953e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  padding: 40px 50px;\r\n  margin: 50px auto 0;\r\n  max-width: 400px;\r\n  background: orange;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  font-family: \"Roboto\", sans-serif;\r\n  color: green;\r\n  text-transform: uppercase;\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  padding: 0 0 0 15px;\r\n  margin: 10px 0 15px;\r\n  width: 100%;\r\n  line-height: 40px;\r\n  color: green;\r\n  border-width: 0px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  margin: 40px 0 15px;\r\n  width: 103%;\r\n  border-width: 0;\r\n  line-height: 40px;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  background-color: green;\r\n  cursor: pointer;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameId = uuidv4();\r\n  const telId = uuidv4();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    name === name ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label htmlFor={nameId}>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameId}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label htmlFor={telId}>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={telId}\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <Button type=\"submit\">Add to contacts</Button>\r\n    </Form>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 30%;\r\n  border-width: 0;\r\n  line-height: 40px;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  background-color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 40px 50px;\r\n  margin: 50px auto 0;\r\n  list-style: none;\r\n  max-width: 400px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  display: block;\r\n  padding: 0 15px;\r\n  color: black;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, List, Name, Item } from \"./ContactList.styled\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContacts }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Item key={id}>\r\n        <Name>\r\n          {name} : {number}\r\n        </Name>\r\n        <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContacts: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  margin: 50px auto 0;\r\n  width: 400px;\r\n  color: green;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  padding: 0 0 0 15px;\r\n  margin: 10px 0 15px;\r\n  width: 100%;\r\n  border-width: 0;\r\n  line-height: 40px;\r\n  color: black;\r\n  border: solid green 1px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"./Filter.styled\";\r\n\r\nconst Filter = ({ value, onChange, onBlur }) => {\r\n  return (\r\n    <>\r\n      <Label htmlFor={\"lab\"}>\r\n        Find contacts by name\r\n        <Input\r\n          type=\"text\"\r\n          id={\"lab\"}\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n        />\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h2`\r\n  display: block;\r\n  margin: 50px auto 0;\r\n  width: 400px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  color: green;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: 34px;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"../Form/ContactForm\";\r\nimport ContactList from \"../List/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport { Title } from \"./App.styled\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const localstorageKeyName = \"contacts\";\r\n\r\n  useEffect(() => {\r\n    const currentContacts = JSON.parse(\r\n      localStorage.getItem(localstorageKeyName)\r\n    );\r\n    currentContacts && setContacts(currentContacts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localstorageKeyName, JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const formSubmitHandler = (name, number) => {\r\n    if (\r\n      contacts.find(\r\n        (contact) => contact.name.toLowerCase() === name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts((prevState) => [newContact, ...prevState]);\r\n  };\r\n\r\n  const deleteContacts = (contactId) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const changeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const changeBlur = (e) => {\r\n    e.currentTarget.value = \"\";\r\n    setFilter(\"\");\r\n  };\r\n\r\n  const filteredContacts = () => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>Phonebook</Title>\r\n      <ContactForm onSubmit={formSubmitHandler} />\r\n      <Title>Contacts</Title>\r\n      <Filter value={filter} onChange={changeFilter} onBlur={changeBlur} />\r\n      <ContactList\r\n        contacts={filteredContacts()}\r\n        onDeleteContacts={deleteContacts}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}