{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/routes/PrivateRoute.jsx","components/routes/PublicRoute.jsx","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/App/App.jsx","index.js","components/css/General.module.css","redux/auth/auth-operations.js","redux/contacts/contacts-actions.js"],"names":["fetchContactsAction","createAsyncThunk","a","axios","get","console","log","message","addContactsAction","contact","post","deleteContactsAction","id","delete","entities","createReducer","fulfilled","_state","payload","data","state","filter","isLoading","pending","rejected","error","changeFilter","combineReducers","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFatching","extraReducers","register","logIn","logOut","_action","fetchCurrentUser","isFetching","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","authSelectors","getIsLoggedIn","getUserName","getIsFetching","PrivateRoute","component","redirectTo","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","Navbar","Nav","exact","className","styles","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","type","onClick","AppBar","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","App","useEffect","fallback","color","height","width","timeout","display","loader","path","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","defaults","baseURL","headers","common","Authorization","credentials","rejectWithValue","_","thunkAPI","getState","persistedToken","createAction"],"mappings":"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","file":"static/js/main.f039946e.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchContactsAction = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    try {\n      return await axios.get(\"/contacts\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n);\n\nexport const addContactsAction = createAsyncThunk(\n  \"contacts/addContacts\",\n  async (contact) => {\n    try {\n      return await axios.post(\"/contacts\", contact);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n);\n\nexport const deleteContactsAction = createAsyncThunk(\n  \"contacts/deleteContacts\",\n  async (id) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  addContactsAction,\n  deleteContactsAction,\n  fetchContactsAction,\n} from \"./contacts-operations\";\nimport { changeFilter } from \"./contacts-actions\";\n\nconst entities = createReducer([], {\n  [fetchContactsAction.fulfilled]: (_state, { payload }) => payload.data,\n  [addContactsAction.fulfilled]: (state, { payload }) => [\n    payload.data,\n    ...state,\n  ],\n\n  [deleteContactsAction.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsAction.pending]: () => true,\n  [fetchContactsAction.fulfilled]: () => false,\n  [fetchContactsAction.rejected]: () => false,\n  [addContactsAction.pending]: () => true,\n  [addContactsAction.fulfilled]: () => false,\n  [addContactsAction.rejected]: () => false,\n  [deleteContactsAction.pending]: () => true,\n  [deleteContactsAction.fulfilled]: () => false,\n  [deleteContactsAction.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsAction.rejected]: (_state, { payload }) => payload,\n  [fetchContactsAction.pending]: null,\n  [addContactsAction.rejected]: (_state, { payload }) => payload,\n  [addContactsAction.pending]: null,\n  [deleteContactsAction.rejected]: (_state, { payload }) => payload,\n  [deleteContactsAction.pending]: null,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n  filter,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { register, logIn, logOut, fetchCurrentUser } from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFatching: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFatching = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetching = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactReducer from \"./contacts/contacts-reducers\";\nimport authReducer from \"./auth/auth-slice\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactReducer,\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\nconst getUserName = (state) => state.auth.user.name;\nconst getIsFetching = (state) => state.auth.isFetching;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsFetching,\n};\n\nexport default authSelectors;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo = \"/\",\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo = \"/\",\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport styles from \"../css/General.module.css\";\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink\n          exact\n          to=\"/\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Главная страница\n        </NavLink>\n        {isLoggedIn && (\n          <NavLink\n            to=\"/contacts\"\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Контакты\n          </NavLink>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport styles from \"../css/General.module.css\";\n\nexport default function AuthNav() {\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink\n          to=\"/register\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Регистрация\n        </NavLink>\n        <NavLink\n          to=\"/login\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Войти\n        </NavLink>\n      </Nav>\n    </Navbar>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport { logOut } from \"../../redux/auth/auth-operations\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <Navbar>\n      <p className=\"greetings\">Добро пожаловать, {name}</p>\n      <button\n        className=\"btn-logout\"\n        type=\"button\"\n        onClick={() => dispatch(logOut())}\n      >\n        Выйти\n      </button>\n    </Navbar>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Navbar } from \"react-bootstrap\";\nimport Navigation from \"../Navigation/Navigation\";\nimport AuthNav from \"../AuthNav/AuthNav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </Navbar>\n  );\n}\n","import { useEffect, lazy, Suspense } from \"react\";\nimport { Switch } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PrivateRoute from \"../routes/PrivateRoute\";\nimport PublicRoute from \"../routes/PublicRoute\";\nimport AppBar from \"../AppBar/AppBar\";\nimport Loader from \"react-loader-spinner\";\nimport { fetchCurrentUser } from \"../../redux/auth/auth-operations\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport styles from \"../css/General.module.css\";\n\nconst AsyncHomeView = lazy(() =>\n  import(\"../../view/HomeView\" /* webpackChunkName: \"home-page\"*/)\n);\nconst AsyncLoginView = lazy(() =>\n  import(\"../../view/LoginView\" /* webpackChunkName: \"login-page\"*/)\n);\nconst AsyncRegisterView = lazy(() =>\n  import(\"../../view/RegisterViews\" /* webpackChunkName: \"register-page\"*/)\n);\nconst AsyncContactsView = lazy(() =>\n  import(\"../../view/ContactsView\" /* webpackChunkName: \"contacts-page\"*/)\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n            display=\"flex\"\n            justify-content=\"center\"\n            className={styles.loader}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <AsyncHomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <AsyncRegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <AsyncLoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <AsyncContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  ) : null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./components/App/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"General_nav__2h7vJ\",\"link\":\"General_link__vW6Ax\",\"activeLink\":\"General_activeLink__TjeP5 General_link__vW6Ax\",\"loader\":\"General_loader__3V-5s\"};","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/login\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post(\"/users/logout\");\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  }\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.data);\n    }\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n"],"sourceRoot":""}